Let me explain the role of keep-alive connections even when browsers create multiple connections:

1. **Without Keep-Alive**:
   - Each HTTP request requires a new TCP connection
   - This means 3-way handshake for every single request
   - After each response, the connection is closed
   - Example sequence: Request image → Connect → Get image → Close → Request CSS → Connect → Get CSS → Close

2. **With Keep-Alive**:
   - Browser still creates multiple connections (let's say 6)
   - But each connection stays open and can be reused
   - No need for new TCP handshakes for subsequent requests
   - Example sequence:
     - Connection 1: Request image → Get image → Request another image → Get another image
     - Connection 2: Request CSS → Get CSS → Request JS → Get JS
     - etc.

3. **Benefits of Keep-Alive**:
   - Reduces latency (no new TCP handshakes)
   - Saves server resources (fewer socket creations/destructions)
   - TCP connections can take advantage of slow start already being established
   - Better handling of subsequent requests like AJAX calls

Here's a simple example:
Let's say a webpage has 18 resources (images, CSS, JS files):
- Without keep-alive: 18 connections (one per resource)
- With keep-alive: 6 connections (each handling 3 resources)

So even though Chrome creates multiple connections, keep-alive is still very important for performance. Each connection is reused multiple times instead of creating a new connection for every single resource request.


